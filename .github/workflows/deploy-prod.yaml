name: Polybot Deploy Prod

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      EC2_HOST:
        required: true
      EC2_USERNAME:
        required: true
      TELEGRAM_BOT_TOKEN:
        required: true
      YOLO_URL:
        required: true
      REGION:
        required: true
      BUCKET_NAME:
        required: true



  workflow_dispatch:
    inputs:
      image:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Configure SSH

        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          cat > ~/.ssh/config <<EOF
          Host ec2
            HostName ${{ secrets.EC2_HOST }}
            User ${{ secrets.EC2_USERNAME }}
            IdentityFile ~/.ssh/private_key
            StrictHostKeyChecking no
          EOF


      - name:  🔍 Confirm deploy input
        run: |
          echo "Deploy received image: ${{ inputs.image }}"

      - name: Debug output image
        run: |
          echo "Image passed: ${{ inputs.image }}"


      - name: Trigger Docker Compose remotely
        run: |
          
          ssh ec2 <<EOF
          cd ~/polybot
          git fetch origin
          git reset --hard origin/main
    
          echo "IMG_NAME=${{ inputs.image }}"  > .env
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
          echo "BOT_APP_URL=aseel-prod.fursa.click" >> .env
          echo "YOLO_URL=http://yolo:8080" >> .env
          echo "REGION=${{ secrets.REGION }}" >> .env
          echo "BUCKET_NAME=${{ secrets.BUCKET_NAME }}" >> .env
          echo "POLYBOT_ENV=prod" >> .env
          
          cat .env  # debug output
    
          docker compose -f docker-compose.prod.yaml pull
          docker compose -f docker-compose.prod.yaml up -d
          EOF
